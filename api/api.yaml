swagger: '2.0'
info:
  version: 1.0.0
  title: Flio API
host: localhost
basePath: /v1
schemes:
  - https
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /categories/:
    get:
      security:
        - Bearer: []
      tags:
        - Catalogue
      summary: Fetch categories
      description: Fetch categories
      parameters:
        - name: language
          in: query
          required: true
          type: string
          description: ISO 639-1 language code
          default: en
          enum:
            - en
            - fr
            - Ã­t
            - es
            - de
            - zh
            - ar
            - hi
            - pt
      produces:
        - application/json
      responses:
        '200':
          description: Live found
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
  /sessions/:
    post:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Create a session
      description: Create an session
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SessionBody'
      responses:
        '200':
          description: Feedback created
          schema:
            $ref: '#/definitions/SessionReply'
        '400':
          description: Invalid uuid supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Session Uuid not found
          schema:
            $ref: '#/definitions/Message'
  '/sessions/{session_uuid}':
    get:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Get information about the requested session
      description: Get information about the requested session
      parameters:
        - name: session_uuid
          in: path
          required: true
          type: string
          format: uuid
      produces:
        - application/json
      responses:
        '200':
          description: Session found
          schema:
            $ref: '#/definitions/Session'
        '400':
          description: Invalid UUID supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
    delete:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Delete a session and all the relative lives / images
      description: A special handling has to be done on the users that buy the lives
      parameters:
        - name: session_uuid
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: session deleted
          schema:
            $ref: '#/definitions/Message'
        '400':
          description: Invalid UUID supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
  /lives/:
    get:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Fetch live details for a given session
      description: Fetch live details for a given session
      parameters:
        - name: session_uuid
          in: query
          type: string
          format: uuid
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Live found
          schema:
            type: array
            items:
              $ref: '#/definitions/Live'
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
    post:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Create live
      description: >-
        Create live, the presenter, if not specififed, will be the creator of
        the relative session
      parameters:
        - name: data
          in: body
          schema:
            type: object
            properties:
              lives:
                type: array
                items:
                  $ref: '#/definitions/LiveBody'
              session_uuid:
                type: string
                format: uuid
          required: true
      produces:
        - application/json
      responses:
        '201':
          description: Lives created
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
  '/lives/{live_uuid}':
    delete:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Delete live
      description: Delete live
      parameters:
        - name: live_uuid
          in: path
          required: true
          type: string
          format: uuid
      produces:
        - application/json
      responses:
        '201':
          description: Lives deleted
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
    put:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Modify live
      description: >-
        Modify live, the presenter, if not specififed, will be the creator of
        the relative session
      parameters:
        - name: live_uuid
          in: path
          required: true
          type: string
          format: uuid
        - name: data
          in: body
          schema:
            type: object
            properties:
              live:
                $ref: '#/definitions/LiveBody'
              session_uuid:
                type: string
                format: uuid
          required: true
      produces:
        - application/json
      responses:
        '201':
          description: Lives updated
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
  /images/:
    post:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Store an image
      description: Store an image
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: upfile
          type: file
          required: true
          description: The file to upload.
        - in: formData
          name: session_uuid
          required: true
          type: string
          format: uuid
          description: UUID of the session
      responses:
        '201':
          description: Image stored
        '400':
          description: Invalid uuid supplied
          schema:
            $ref: '#/definitions/Message'
    get:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Fetch images of a given session
      description: Fetch images details of a given session
      parameters:
        - name: session_uuid
          in: query
          type: string
          format: uuid
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Images found
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
  '/images/{image_uuid}':
    delete:
      security:
        - Bearer: []
      tags:
        - Catalogue - Manager
      summary: Delete an image
      description: Delete an image
      parameters:
        - name: image_uuid
          in: path
          required: true
          type: string
          format: uuid
      produces:
        - application/json
      responses:
        '201':
          description: Image deleted
        '400':
          description: Invalid UUID supplied
          schema:
            $ref: '#/definitions/Message'
  /availabilities/:
    post:
      security:
        - Bearer: []
      tags:
        - Catalogue - Availability
      summary: Setup initial availability for the given session
      description: Setup initial availability for the given session
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AvailabilityBody'
      produces:
        - application/json
      responses:
        '201':
          description: Availability initied
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
  '/availabilities/{ref_uuid}':
    get:
      security:
        - Bearer: []
      tags:
        - Catalogue - Availability
      summary: Fetch availability for the given session
      description: Fetch categories
      parameters:
        - name: ref_uuid
          in: path
          required: true
          type: string
          description: Reference uuid
      produces:
        - application/json
      responses:
        '200':
          description: Availability found
          schema:
            $ref: '#/definitions/Availability'
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
  '/availabilities/{ref_uuid}/decrease':
    patch:
      security:
        - Bearer: []
      tags:
        - Catalogue - Availability
      summary: Decreased availability for the given session (new booking done)
      description: Decreased availability for the given session (new booking done)
      parameters:
        - name: ref_uuid
          in: path
          required: true
          type: string
          description: Reference uuid
      produces:
        - application/json
      responses:
        '200':
          description: Availability decreased
          schema:
            $ref: '#/definitions/Availability'
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
  '/availabilities/{ref_uuid}/increase':
    patch:
      security:
        - Bearer: []
      tags:
        - Catalogue - Availability
      summary: Increase availability for the given session (booking cancelled)
      description: Increase availability for the given session (booking cancelled)
      parameters:
        - name: ref_uuid
          in: path
          required: true
          type: string
          description: Reference uuid
      produces:
        - application/json
      responses:
        '200':
          description: Availability increased
          schema:
            $ref: '#/definitions/Availability'
        '400':
          description: Invalid query supplied
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Message'
definitions:
  Message:
    type: object
    properties:
      debug:
        type: array
        description: List of debug messages
        items:
          type: object
          properties:
            code:
              type: string
              description: Debug code
            message:
              type: string
              description: Debug message in English
      info:
        type: array
        description: List of info messages
        items:
          type: object
          properties:
            code:
              type: string
              description: Info code
            message:
              type: string
              description: Info message in English
      errors:
        type: array
        description: List of error messages
        items:
          type: object
          properties:
            code:
              type: string
              description: Error code
            message:
              type: string
              description: Error message in English
      warnings:
        type: array
        description: List of warning messages
        items:
          type: object
          properties:
            code:
              type: string
              description: Warning code
            message:
              type: string
              description: Warning message in English
  LanguageCode:
    type: string
    description: ISO 639-1 language code
    default: en
  Localizable:
    type: object
    required:
      - value
      - code
    properties:
      value:
        type: string
      code:
        $ref: '#/definitions/LanguageCode'
  Currency:
    type: string
    description: ISO 4217 currency code
    default: EUR
  Money:
    type: object
    required:
      - currency
      - amount
    properties:
      amount:
        type: integer
      currency:
        $ref: '#/definitions/Currency'
  Category:
    type: object
    required:
      - value
      - uuid
    properties:
      value:
        type: string
        example: 'fitness, educational, entertaining, religious'
        description: category in the given language
      uuid:
        type: string
        format: uuid
        description: UUID of the category. It is the same for all the languages
  Session:
    type: object
    required:
      - uuid
    allOf:
      - $ref: '#/definitions/SessionBody'
      - properties:
          uuid:
            type: string
            format: uuid
            description: UUID of the session
          created_at:
            type: string
            format: datetime
            description: >-
              GMT Creation date time of the session as defined by RFC 3339,
              section 5.6
            example: '2020-07-21T17:32:28Z'
  SessionBody:
    type: object
    required:
      - name
      - category
      - creator_uuid
      - tokens
    properties:
      name:
        type: string
        description: Name of the session
      category:
        $ref: '#/definitions/Category'
      hashtags:
        type: array
        description: Array of hashtags
        items:
          type: string
          example: '#bestof2021'
      description:
        $ref: '#/definitions/Localizable'
      creator_uuid:
        type: string
        format: uuid
        description: UUID of the creator (user) of the session
      tokens:
        type: integer
        minimum: 0
        description: Number of tokens needed to attend the session
  SessionReply:
    type: object
    required:
      - session_uuid
    properties:
      session_uuid:
        type: string
        format: uuid
        description: UUID of the session
  Image:
    type: object
    required:
      - uuid
      - title
    allOf:
      - properties:
          uuid:
            type: string
            format: uuid
            description: 'UUID of the image, used for delete operation'
          uri:
            type: string
            format: uri
            description: Uri of the image generated by the server
      - $ref: '#/definitions/ImageBody'
  ImageBody:
    type: object
    required:
      - session_uuid
    properties:
      session_uuid:
        type: string
        format: uuid
        description: UUID of the session
  Live:
    type: object
    required:
      - presenter_uuid
      - session_uuid
      - from
      - to
    allOf:
      - $ref: '#/definitions/LiveBody'
      - properties:
          uuid:
            type: string
            format: uuid
            description: UUID of the live
          session_uuid:
            type: string
            format: uuid
            description: UUID of the session
          streaming_uuid:
            type: string
            format: uuid
            description: UUID of the streaming
  LiveBody:
    type: object
    required:
      - from
      - to
    properties:
      from:
        type: string
        format: date-time
        description: Start date time in GMT
      to:
        type: string
        format: date-time
        description: Start date time in GMT
      presenter_uuid:
        type: string
        format: uuid
        description: UUID of the presenter (user)
      description:
        type: string
      language:
        $ref: '#/definitions/LanguageCode'
  Availability:
    type: object
    required:
      - ref_uuid
    allOf:
      - $ref: '#/definitions/AvailabilityBody'
      - properties:
          booked_slots:
            type: integer
            description: Number of booked slots
            default: 0
  AvailabilityBody:
    type: object
    required:
      - ref_uuid
    properties:
      ref_uuid:
        type: string
        format: uuid
      max_slots:
        type: integer
        minimum: 0
        description: Maximum number of slots
        default: 100

